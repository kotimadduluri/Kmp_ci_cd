name: üçè iOS Build and Distribution

on:
  workflow_call:
    secrets:
      IOS_APP_ID: { required: true }
      FIREBASE_TOKEN: { required: true }
      # Android secrets must be declared and passed to satisfy the KMP module config
      KEYSTORE_PASSWORD: { required: true }
      KEY_ALIAS: { required: true }
      KEY_PASSWORD: { required: true }

jobs:
  build_ios:
    runs-on: macos-latest

    env:
      IOS_APP_PATH: iosApp
      TESTER_GROUP: "new-release-updates"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1. Download the keystore file artifact (Required for Gradle configuration phase)
      - name: Download Keystore Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-signing-keystore
          path: composeApp/

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0'

      # 2. Build KMP iOS Framework (CRITICAL FIX: Pass Android Secrets to prevent configuration crash)
      - name: Build KMP iOS Framework
        run: |
          ./gradlew :composeApp:embedAndSignAppleFrameworkForXcode \
            -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} \
            -PKEY_ALIAS=${{ secrets.KEY_ALIAS }} \
            -PKEY_PASSWORD=${{ secrets.KEY_PASSWORD }}

      # 3. Increment iOS build number
      - name: Increment iOS build number
        run: |
          INFOPLIST="$IOS_APP_PATH/iosApp/Info.plist"
          CURRENT_BUILD_NUMBER=$(/usr/libexec/PlistBuddy -c "Print :CFBundleVersion" $INFOPLIST)
          NEW_BUILD_NUMBER=$((CURRENT_BUILD_NUMBER + 1))
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD_NUMBER" $INFOPLIST

      # 4. Build iOS IPA
      - name: Build iOS IPA
        run: |
          cd $IOS_APP_PATH
          xcodebuild \
            -workspace iosApp.xcworkspace \
            -scheme iosApp \
            -sdk iphoneos \
            -configuration Release \
            -archivePath build/iosApp.xcarchive archive
          xcodebuild \
            -exportArchive \
            -archivePath build/iosApp.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build

      # 5. Upload iOS
      - name: Upload iOS to Firebase
        run: |
          firebase appdistribution:distribute $IOS_APP_PATH/build/iosApp.ipa \
            --app "${{ secrets.IOS_APP_ID }}" \
            --groups "$TESTER_GROUP" \
            --release-notes "iOS build from GitHub Actions - Commit ${{ github.sha }}" \
            --token "${{ secrets.FIREBASE_TOKEN }}"