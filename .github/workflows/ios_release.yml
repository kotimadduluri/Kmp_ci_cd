name: üçè iOS Build and Distribution (KMP ComposeApp)

on:
  # This makes the workflow reusable
  workflow_call:
    secrets:
      IOS_APP_ID: { required: true }
      FIREBASE_TOKEN: { required: true }
      # These Android secrets are included, assuming they are required for
      # the Gradle configuration phase, even if Android isn't built here.
      KEYSTORE_PASSWORD: { required: true }
      KEY_ALIAS: { required: true }
      KEY_PASSWORD: { required: true }

jobs:
  build_ios:
    runs-on: macos-latest

    env:
      # Primary path to the top-level Xcode project folder
      IOS_APP_PATH: iosApp
      TESTER_GROUP: "new-release-updates"

    steps:
      # ---------- 1. Checkout & Download Artifacts ----------
      - name: üì¶ Checkout Repository
        uses: actions/checkout@v4
      - name: üîë Download Keystore Artifact
        # Required if your main Gradle build needs this file during its configuration phase
        uses: actions/download-artifact@v4
        with:
          name: android-signing-keystore
          path: composeApp/

      # ---------- 2. Setup Tools ----------
      - name: üõ†Ô∏è Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0'
      - name: üî• Install Firebase Tools
        run: npm install -g firebase-tools

      # ---------- 3. Increment iOS Build Number (FIXED PATH AND LOGIC) ----------
      - name: üî¢ Increment iOS Build Number
        run: |
          # Check for the Info.plist file inside the nested Xcode project directory
          INFOPLIST="$IOS_APP_PATH/iosApp/Info.plist" 
          
          if [ -f "$INFOPLIST" ]; then
            # Read and increment the Build Number (:CFBundleVersion)
            CURRENT_BUILD_NUMBER=$(/usr/libexec/PlistBuddy -c "Print :CFBundleVersion" $INFOPLIST)
            NEW_BUILD_NUMBER=$((CURRENT_BUILD_NUMBER + 1))
            /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD_NUMBER" $INFOPLIST
            echo "‚úÖ iOS build number incremented: $CURRENT_BUILD_NUMBER ‚Üí $NEW_BUILD_NUMBER"
          else
            echo "‚ùå Info.plist not found at $INFOPLIST. Job Failed."
            exit 1
          fi

      # ---------- 4. Build and Archive iOS IPA (FIXED: Single xcodebuild call) ----------
      - name: üì± Build and Export iOS IPA
        run: |
          cd $IOS_APP_PATH
          echo "üèóÔ∏è Archiving iOS app. (This automatically triggers the KMP framework build via Gradle)..."
          
          # ARCHIVE STEP: Builds the KMP framework and the iOS app.
          xcodebuild \
            archive \
            -workspace iosApp.xcworkspace \
            -scheme iosApp \
            -sdk iphoneos \
            -configuration Release \
            -archivePath build/iosApp.xcarchive \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO # Unsigned flags
          
          echo "üì¶ Exporting unsigned IPA..."
          # EXPORT STEP
          xcodebuild \
            -exportArchive \
            -archivePath build/iosApp.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      # ---------- 5. Verify & 6. Upload iOS to Firebase ----------
      - name: üßæ Verify Generated IPA
        run: |
          echo "üîç Checking for IPA file..."
          IPA_PATH=$(find $IOS_APP_PATH/build -name "*.ipa" -print -quit)
          if [ -z "$IPA_PATH" ]; then
            echo "‚ùå No IPA file found!"
            exit 1
          else
            echo "‚úÖ IPA generated successfully: $IPA_PATH"
            ls -lh "$IPA_PATH"
          fi

      - name: üöÄ Upload iOS Build to Firebase
        run: |
          IPA_PATH=$(find $IOS_APP_PATH/build -name "*.ipa" -print -quit)
          if [ -f "$IPA_PATH" ]; then
            firebase appdistribution:distribute "$IPA_PATH" \
              --app "${{ secrets.IOS_APP_ID }}" \
              --groups "$TESTER_GROUP" \
              --release-notes "üçè CI Build #${{ steps.increment_build_number.outputs.NEW_BUILD_NUMBER }} (Commit: ${{ github.sha }})" \
              --token "${{ secrets.FIREBASE_TOKEN }}"
          else
            echo "‚ùå IPA not found, skipping Firebase upload."
          fi