name: Firebase Distribution (KMP)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  distribute:
    runs-on: macos-latest

    env:
      ANDROID_APP_PATH: composeApp
      IOS_APP_PATH: iosApp
      ANDROID_APP_ID: ${{ secrets.ANDROID_APP_ID }}
      IOS_APP_ID: ${{ secrets.IOS_APP_ID }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      TESTER_GROUP: "new-release-updates"
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}

    steps:
      # ---------- 1. Checkout ----------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------- 2. Setup JDK ----------
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # ---------- 3. Cache Gradle ----------
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # ---------- 4. Setup Android SDK & Build Tools ----------
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0

      - name: Set Build Tools Path
        run: echo "ANDROID_SDK_BUILD_TOOLS=$ANDROID_HOME/build-tools/34.0.0" >> $GITHUB_ENV

      # ---------- 5. Decode Keystore (Standard Robust Method) ----------
      - name: Decode Keystore
        run: |
          # Uses tr to strip ALL whitespace before decoding for integrity.
          echo "$KEYSTORE_BASE64" | tr -d '[:space:]' | base64 --decode > $ANDROID_APP_PATH/keystore.jks

      # ---------- 6. Install Firebase Tools ----------
      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      # ---------- 7. Increment Android version ----------
      - name: Increment Android versionCode
        run: |
          FILE="$ANDROID_APP_PATH/build.gradle.kts"
          CURRENT_CODE=$(grep "versionCode" $FILE | grep -o '[0-9]\+' | head -n 1)
          NEW_CODE=$((CURRENT_CODE + 1))
          sed -i "" "s/versionCode $CURRENT_CODE/versionCode $NEW_CODE/" $FILE
          VERSION_NAME="1.0.$NEW_CODE"
          sed -i "" "s/versionName \".*\"/versionName \"$VERSION_NAME\"/" $FILE
          echo "Android versionCode=$NEW_CODE, versionName=$VERSION_NAME"

      # ---------- 8. Build Android APK (Standard CI Signing Fix) ----------
      - name: Build Android APK
        run: |
          # Pass secrets as properties (-P) directly to Gradle, matching the build.gradle.kts file.
          ./gradlew :composeApp:assembleRelease \
            -PkeyStorePassword=${{ env.KEYSTORE_PASSWORD }} \
            -PkeyAlias=${{ env.KEY_ALIAS }} \
            -PkeyPassword=${{ env.KEY_PASSWORD }}

      # ---------- 9. Find APK ----------
      - name: Find APK File Path
        id: find_apk
        run: |
          ANDROID_OUTPUT_DIR="$ANDROID_APP_PATH/build/outputs/apk/release"
          APK_FILE_PATH=$(find "$ANDROID_OUTPUT_DIR" -name "*.apk" -print -quit)
          if [ -z "$APK_FILE_PATH" ]; then
            echo "Error: Could not find any .apk file in $ANDROID_OUTPUT_DIR."
            exit 1
          fi
          echo "::set-output name=apk_path::$APK_FILE_PATH"

      # ---------- 10. Upload Android ----------
      - name: Upload Android to Firebase
        run: |
          firebase appdistribution:distribute ${{ steps.find_apk.outputs.apk_path }} \
            --app "$ANDROID_APP_ID" \
            --groups "$TESTER_GROUP" \
            --release-notes "Android build from GitHub Actions - Commit ${{ github.sha }}" \
            --token "$FIREBASE_TOKEN"

      # ---------- 11. Setup Xcode ----------
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0'

      # ---------- 12. Cache Xcode ----------
      - name: Cache Xcode Build Artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ${{ env.IOS_APP_PATH }}/build
          key: ${{ runner.os }}-xcode-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      # ---------- 13. Build KMP iOS Framework (Correct Task Name) ----------
      - name: Build KMP iOS Framework
        run: |
          # Uses the correct task name for generating the framework for Xcode.
          ./gradlew :composeApp:embedAndSignAppleFrameworkForXcode

      # ---------- 14. Increment iOS build number ----------
      - name: Increment iOS build number
        run: |
          INFOPLIST="$IOS_APP_PATH/iosApp/Info.plist"
          CURRENT_BUILD_NUMBER=$(/usr/libexec/PlistBuddy -c "Print :CFBundleVersion" $INFOPLIST)
          NEW_BUILD_NUMBER=$((CURRENT_BUILD_NUMBER + 1))
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD_NUMBER" $INFOPLIST
          echo "iOS build number incremented from $CURRENT_BUILD_NUMBER to $NEW_BUILD_NUMBER"

      # ---------- 15. Build iOS IPA ----------
      - name: Build iOS IPA
        run: |
          cd $IOS_APP_PATH
          xcodebuild \
            -workspace iosApp.xcworkspace \
            -scheme iosApp \
            -sdk iphoneos \
            -configuration Release \
            -archivePath build/iosApp.xcarchive archive
          xcodebuild \
            -exportArchive \
            -archivePath build/iosApp.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build

      # ---------- 16. Upload iOS ----------
      - name: Upload iOS to Firebase
        run: |
          firebase appdistribution:distribute $IOS_APP_PATH/build/iosApp.ipa \
            --app "$IOS_APP_ID" \
            --groups "$TESTER_GROUP" \
            --release-notes "iOS build from GitHub Actions - Commit ${{ github.sha }}" \
            --token "$FIREBASE_TOKEN"